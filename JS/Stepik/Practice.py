# В этом задании вам нужно вписать в указанное место код, который будет присваивать переменной "х" значение
# суммы переменных "a" и "b" в случае если  a > b или их произведение в остальных случаях.

# function
# testIf(a, b) {
#     var x;
# if (a > b) {
#     x = a + b;
# } else {
#     x = a * b;
# }
#
# return x;
# }

# В этом задании вам нужно вписать в указанное место код, который будет присваивать переменной "х" значение суммы
# переменных "a" и "b" - в случае если  a < b, разность "a" и "b" - в случае если  a > b, и их произведение
# в остальных случаях.

# function
# testIf(a, b) {
#     var x;
# if (a < b) {
#     x = a + b;
# } else if (a > b) {
# x = a - b;
# } else {
# x = a * b
# }
#
# return x;
# }

# В этом задании вам нужно вписать в указанное место код, который будет присваивать переменной "х" название цифры,
# переданной в переменную "а". Цифра в переменную "а" будет передана случайным образом и может оказаться в
# диапазоне от 0 до 9 включительно, название должно быть написано по-русски с большой буквы - "Ноль", "Один", "Два" и т.д.

# function testCase(a) {
#     var x;
#         switch (a) {
#             case 0:
#                     x = 'Ноль';
#                     break;
#              case 1:
#                     x = 'Один';
#                     break;
#              case 2:
#                     x = 'Два';
#                     break;
#              case 3:
#                     x = 'Три';
#                     break;
#              case 4:
#                     x = 'Четыре';
#                     break;
#              case 5:
#                     x = 'Пять';
#                     break;
#               case 6:
#                     x = 'Шесть';
#                     break;
#               case 7:
#                     x = 'Семь';
#                     break;
#               case 8:
#                     x = 'Восемь';
#                     break;
#               case 9:
#                     x = 'Девять';
#                     break;
#         }
#     return x;
# }

# В этом задании вам нужно вычислить факториал для числа, передаваемого в нашу функцию и вывести его с помощью команды
# return. На всякий случай напоминаем, что факториал числа a это произведение всех целых чисел от 1 до a, например,
# если а = 5, то факториал a будет равен
# 1 * 2 * 3 * 4 * 5

# function
# testFactorial(a) {
#     var x;
# x = 1
# for (i = 1; i <= a; i = i + 1) {
#     x = x * i;
# }
#
# return x;
# }

# В этом задании вам нужно вычислить сумму всех четных чисел, встречающихся в ряду от 1 до числа (включительно),
# передаваемого в нашу функцию (переменная "а").

# function testWhile(a) {
#     var x = 0;
#     while (a > 0) {
#         if (a % 2 == 0){
#             x += a
#         }
#        a = a - 1;
#     }
#     return x;
# }

# Найдите сумму  всех целых чисел от 1 до n включительно и верните из функции результат.

# function
# testCycle(n) {
#     var x;
# x = 0
# for (i = 1; i <= n; i = i + 1)
# x = x + i
#
# return x;
# }

# Даны два целых числа k и n. Верните из функции строку, которая состоит из чисел n, повторяющихся k раз,
# разделенных пробелом. Известно, что и k и n больше либо равно 1.

# function testCycle(k, n) {
#     var x;
#     x = ""
#     for (i = 1; i <=k; i = i + 1)
#          x = x + " " + n
#     return x;
# }

# Даны числа a и b. Выведите строку с числами от а до b, разделенных пробелами. Известно, что b больше a
# function testCycle(a, b) {
#     var x;
#     x = ''
#     for(i = a; i <= b; i = i + 1)
#         x = x + ' ' + i
#     return x;
# }

# Даны числа a и b. Выведите строку с числами между а и b включая границы, отсортированными по возрастанию.
# Неизвестно, какое из чисел больше, но известно, что и a и b больше 0.

# function testCycle(a, b) {
#     var x;
#     x = ''
#     if (a < b) {
#     for(i = a; i <= b; i = i + 1)
#     x = x + ' '+ i
#     }else {
#      for(i = b; i <= a; i = i + 1)
#      x = x + ' '+ i
#     }
#     return x;
# }

# Даны числа a и b. Выведите строку с числами от большего числа до меньшего. Известно, что и a и b больше либо
# равно 1, но неизвестно, какое из них больше.

# function testCycle(a, b) {
#     var x;
#     x = ''
#     if (a > b) {
#     for(i = a; i >= b; i = i - 1)
#     x = x + ' '+ i
#     }else {
#      for(i = b; i >= a; i = i - 1)
#      x = x + ' '+ i
#     }
#     return x;
# }

# Даны числа a и b. Найдите сумму квадратов чисел между a и b включительно. Неизвестно, какое из чисел a или b больше.
# function testCycle(a, b) {
#     var x;
#     x = 0
#     if (a < b) {
#     for(i = a; i <= b; i = i + 1)
#     x = x + i**2
#     }else {
#      for(i = b; i <= a; i = i + 1)
#      x = x + i**2
#     }
#     return x;
# }

# Дано целое число n, большее 1. Найти квадрат данного числа, используя формулу n^2 = 1 + 3 + 5 + ... + (2 * n - 1)n
# 2
#  =1+3+5+...+(2∗n−1) .  Из функции необходимо вывести строку, состоящую из чисел, получающихся на каждом шаге при
#  добавлении каждого слагаемого (таким образом, получится строка из квадратов всех чисел от 1 до n).

# function testCycle(n) {
#     var x;
#     x = ''
#     for(i = 1; i <= n; i = i + 1)
#     x += i**2 + ' '
#     return x;
# }

# Дано число n (n > 0). Верните из функции следующую сумму: 1 + 1.5 + 2 + 2.5 + ... + n1+1.5+2+2.5+...+n. Задача довольно
# простая, подумайте, как можно задавать изменение счетчика, чтобы легко получить нужную сумму.

# function testCycle(n) {
#     var x;
#     x = 0
#     for (i = 1; i <= n; i = i + 0.5)
#         x = x + i
#     return x;
# }

# Дано число n (n > 0). Верните из функции значение двойного факториала: n!! = n * (n - 2) * (n - 4) * ... * 2n!!=n∗(n−2)∗(n−4)∗...∗2 (или 1, в зависимости от четности n).
#
# Пример, для n = 5: n!! = 5 * 3 * 1 = 15n!!=5∗3∗1=15, для n = 6: n!! = 6*4*2=48n!!=6∗4∗2=48

# function testCycle(n) {
#     var x;
#         x = 1
#     for (i = n; i >= 1; i = i - 2)
#         x = x * i
#     return x;
# }

# Найдите наибольший общий делитель чисел a и b. (Подсказка: вам поможет алгоритм Евклида и цикл while).

# function testCycle(a, b) {
#     var x = 0;
#     var y = 0
#     for (i = 1; i <= b; i = i + 1)
#         if (a % i == 0 && b % i == 0) {
#         x = i;
#         }
#         if (x > y) {
#         y = x;
#         }
#
#     return y;
# }

# Дано число n (n > 1). Проверьте, простое оно или составное. Если число простое - верните из функции строку
# "Простое число", если нет - "Составное число". Воспользуйтесь методом перебора делителей числа.

# function testCycle(n) {
#     var x;
#     x = 'Простое число';
#     for (i = 2; i < n; i = i + 1)
#         if (n % i == 0){
#             x = 'Составное число';
#             break;
#     }
#     return x;
# }

# Дано число n. Найдите сумму его цифр.
# function
# testCycle(n) {
#     var x;
# x = 0;
#
# for (i of String(n))
# x += Number(i)
#
# return x;
# }

# Дано натуральное число n. Напишите рекурсивную функцию, которая возвращает строку чисел от 1 до n, разделенных пробелом.

# function my_function(n) {
#     if (n <=1)
#     return 1
#     return String(my_function(n-1)) + ' ' + String(n)
# }