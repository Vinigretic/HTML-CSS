//В JavaScript математические операции представлены методами стандартного объекта Math.
//
//У объекта Math есть методы, каждый из которых выполняет определенную математическую функцию (например квадратный корень,
//возведение в степень, синус и т.п.) и свойства, которые фактически представляют собой константы - число Пи, число Е,
//натуральный логарифм 10 и другие.
//
//В отличие от других глобальных объектов Math не является конструктором, т.е. свойства и методы объекта Math статичны.
//Для нас это означает, что мы можем обращаться к его методам и свойствам напрямую, не создавая экземпляра объекта. Например,
//можно обратиться к константе pi как Math.PI или вызвать функцию sqrt (квадратный корень) как Math.sqrt(x).

//Для начала давайте рассмотрим константы объекта Math.
//
//Math.E - число е, основание натурального логарифма, константа Эйлера (Непера), приблизительно 2.718...
//Math.PI - число Пи, приблизительно равно, как известно, 3.1415926...
//Math.SQRT2 -квадратный корень из 2, приблизительное значение 1.414
//Math.SQRT1_2 -квадратный корень из 1/2, приблизительное значение 0.707
//Math.LN2 - натуральный логарифм 2, приблизительное значение 0.693
//Math.LN10 - натуральный логарифм 10, приблизительное значение 2.302
//Math.LOG2E - логарифм Е по основанию 2, приблизительное значение 1.442
//Math.LOG10E -  логарифм Е по основанию 10, приблизительное значение 0.434
//
//В качестве примера рассмотрим функцию, которая получает радиус окружности и возвращает ее длину:
//
//function circumference(radius) {
//  return radius * Math.PI * 2;
//}
//В этом примере мы используем доступ к константе Math.PI для получения значения числа Пи.

//Теперь обратимся к методам объекта Math.
//
//Мы разделим их на группы и для начала рассмотрим тригонометрические функции:
//
//
//Math.sin (x) - возвращает значение синуса аргумента (в радианах), от -1 до 1 естественно.
//Math.cos (x) - возвращает значение косинуса аргумента (в радианах), от -1 до 1.
//Math.tan (x) - возвращает численное значение для тангенса угла в радианах.
//Math.asin (x) - возвращает значение (в радианах) арксинуса для аргумента, который задается от -1 до 1
//Math.acos (x) - возвращает значение (в радианах) арккосинуса для аргумента, который задается от -1 до 1
//Math.atan (x) - возвращает значение арктангенса (из промежутка от -pi/2 до pi/2 для аргумента
//Math.atan2 (y, x) - функция называется арктангенс двух переменных. Она возвращает числовое значение между -\piπ и \piπ, и
//представляет собой угол между положительным лучом оси Х и точкой x,y.

//Функции преобразования и сравнения:
//
//Math.min ([Значение1[,значение2[, ...]]]) - возвращает минимальное значение из аргументов.
//Math.max ([Значение1[,значение2[, ...]]]) - возвращает максимальное значение из аргументов.
//Math.floor (x) - округление до ближайшего целого в меньшую сторону
//Math.ceil (x) - округление до ближайшего целого в большую сторону
//Math.abs(x) - возвращает абсолютное значение числа, его еще называют "модуль"
//Math.round(x) - округляет число по правилам математики
//
//Обратите внимание! Запись аргументов в квадратных скобках означает, что аргументы - необязательные. Это означает,
//что запись Math.min([Значение1[,значение2[, ...]]]). Может использоваться как Math.min() или Math.min(Значение1),
//или Math.min(Значение1, значение2) и т.п.

//Функции вычисления, (почему бы не назвать эту группу именно так):
//
//Math.sqrt(x) - возвращает квадратный корень из аргумента
//Math.pow(base, exponent) - возводит число "base" в степень "exponent"
//Math.log(x) - вычисляет натуральный (по основанию е) логарифм числа
//Math.exp(x) - вычисляет экспоненту - значение числа е в степени аргумента "х"
//Math.random() - возвращает случайное число от 0 (включительно) до 1
